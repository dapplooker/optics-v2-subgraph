type Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  name: String!
  lastUpdatedTimestamp: BigInt! # uint256
}


type Transaction @entity {
  id: ID!
  token: Token!
  txHash: Bytes!
  fromAddress: Bytes # address
  toAddress: Bytes # address
  transactionType: String
  gasUsed: BigInt
  gasPrice: BigInt
  lastUpdatedTimestamp: BigInt! # uint256
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
}


type TokenDayData @entity {
  id: ID!
  dayTimestamp: Int!
  token: Token!
  dailyVolumeToken: BigDecimal!
  outDailyVolumeToken: BigDecimal!
  inDailyVolumeToken: BigDecimal!

  dailyGasConsumed: BigDecimal!
  outDailyGasConsumed: BigDecimal!
  inDailyGasConsumed: BigDecimal!

  dailyTxns: BigInt!
  outDailyTxns: BigDecimal!
  inDailyTxns: BigDecimal!

  lastUpdatedTimestamp: BigInt! # uint256
}


type User @entity {
  id: ID!
  user: Bytes!
  token: Token!
  lastUpdatedTimestamp: BigInt! # uint256
}
